{"ast":null,"code":"var _jsxFileName = \"/Users/salmanahmedg/Documents/FRESHWORKS/freshworks/Reactjs-Typescript/16_react-hook-form/react-hook-form-zod/src/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8)\n});\nconst App = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors,\n      isSubmitting\n    }\n  } = useForm({\n    defaultValues: {\n      email: \"test@email.com\"\n    },\n    resolver: zodResolver(schema)\n  });\n  const onSubmit = async data => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(data);\n    } catch (error) {\n      setError(\"root\", {\n        message: \"This email is already taken\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"tutorial gap-2\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"email\"),\n      type: \"text\",\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"password\"),\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitting,\n      type: \"submit\",\n      children: isSubmitting ? \"Loading...\" : \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), errors.root && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: errors.root.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vX8mbQJWeuce7l/9WRZkMQAwFMQ=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["zodResolver","useForm","z","jsxDEV","_jsxDEV","schema","object","email","string","password","min","App","_s","register","handleSubmit","setError","formState","errors","isSubmitting","defaultValues","resolver","onSubmit","data","Promise","resolve","setTimeout","console","log","error","message","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","disabled","root","_c","$RefreshReg$"],"sources":["/Users/salmanahmedg/Documents/FRESHWORKS/freshworks/Reactjs-Typescript/16_react-hook-form/react-hook-form-zod/src/App.tsx"],"sourcesContent":["import './App.css';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nconst schema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\ntype FormFields = z.infer<typeof schema>;\n\nconst App = () => {\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: { errors, isSubmitting },\n  } = useForm<FormFields>({\n    defaultValues: {\n      email: \"test@email.com\",\n    },\n    resolver: zodResolver(schema),\n  });\n\n  const onSubmit: SubmitHandler<FormFields> = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      console.log(data);\n    } catch (error) {\n      setError(\"root\", {\n        message: \"This email is already taken\",\n      });\n    }\n  };\n\n  return (\n    <form className=\"tutorial gap-2\" onSubmit={handleSubmit(onSubmit)}>\n      <input {...register(\"email\")} type=\"text\" placeholder=\"Email\" />\n      {errors.email && (\n        <div className=\"text-red-500\">{errors.email.message}</div>\n      )}\n      <br/>\n      <input {...register(\"password\")} type=\"password\" placeholder=\"Password\" />\n      {errors.password && (\n        <div className=\"text-red-500\">{errors.password.message}</div>\n      )}\n      <br/>\n      <button disabled={isSubmitting} type=\"submit\">\n        {isSubmitting ? \"Loading...\" : \"Submit\"}\n      </button>\n      {errors.root && <div className=\"text-red-500\">{errors.root.message}</div>}\n    </form>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}